Delete the first element:
class Node:
    def __init__(self,data):
        self.item=data
        self.next=None

class LinkedList:
    def __init__(self):
        self.head=None
    
    def insert_begin(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
        
    def traverse(self):
        if self.head is None:
            print("list is empty")
        else:
            temp=self.head
            while temp is not None:
                print(temp.item)
                temp=temp.next
                
    def insert_index(self,data,index):
        new_node=Node(data)
        temp=self.head
        pos=0
        if pos==index:
            self.insert_begin(data)
        else:
            while(temp!=None and pos+2!=index):
                pos=pos+1
                temp=temp.next
            
            if temp!=None:
                new_node.next=temp.next
                temp.next=new_node
            else:
                print("index not present")
                
    def insert_last(self,data):
        new_node=Node(data)
        temp=self.head
        while temp.next is not None:
            temp=temp.next
        temp.next=new_node
        new_node.next=None
     
        #delete the first element
    def delete_begin(self):
        self.head=self.head.next
        
        
        
        
    
new=LinkedList()
new.insert_begin(23)
new.insert_begin(45)
new.insert_begin(4)
new.insert_index(76, 3)
new.insert_last(100)
new.delete_begin()
new.traverse()