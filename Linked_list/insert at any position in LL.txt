insert at any position in LL

2)
#create a node
class Node:
    def __init__(self,data):
        self.item=data
        self.next=None
        
#create linked list
class LinkedList:
    def __init__(self):
        self.head=None
     #insert in LL  
    def insert_at_start(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
       #traversing a LL 
    def  traverse(self):
        if self.head is None:
            print("Linked list is empty")
            return
        else:
            temp=self.head
            while temp is not None:
                print(temp.item," ")
                temp=temp.next
                
    def insert_at_index(self,data,index):
        new_node=Node(data)
        temp=self.head
        pos=0
        if pos == index:
            self.insert_at_start(data)
        else:
            while(temp!=None and pos+1!=index):
                pos=pos+1
                temp=temp.next
            if temp!=None:
               new_node.next=temp.next
               temp.next=new_node
            else:
                print("index not present")
               
               
        
        
        
new_ll=LinkedList()
new_ll.insert_at_start(5)
new_ll.insert_at_start(4)
new_ll.insert_at_start(78)
new_ll.insert_at_start(45)

new_ll.insert_at_index(34, 2)

new_ll.traverse()
        
output--
45
78
4
5
        