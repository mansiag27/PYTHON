set


1)Write a Python program to create a set. 

solution--

my={1,2,3,4,5}
another_set=set([5,6,7,8])
print(my)
print(another_set)

output--
{1, 2, 3, 4, 5}
{8, 5, 6, 7}

2)Write a Python program to iteration over sets. 

solution--
my=set([1,2,3,4])
for i in my:
    print(i)

output--
1
2
3
4

3)Write a Python program to add member(s) in a set. 
solution--

my=([1,2,3,4])
ans=0
for i in my:
    ans=ans+i
print("ans: ",ans)

output--
ans:  10

4)Write a Python program to remove item(s) from set 
solution--

my=([1,2,3,4])
my.pop(3)
print(my)

output--
[1, 2, 3]

5)Write a Python program to remove an item from a set if it is present in the set. 

solution--

my=[1,2,3,4]

n=int(input("enter value: "))  
if n<0 or n>=len(my):
    print("not")
else:
    my.pop(n)
print(my)


ouput--
enter value: 1
[1, 3, 4]

6)Write a Python program to create an intersection of sets. 

solution--

my=set()
n=int(input("enter length: "))
for i in range(n):
    value=int(input("enter value: "))
    my.add(value)
print(my)

output--

enter length: 4

enter value: 1

enter value: 2

enter value: 3

enter value: 4
{1, 2, 3, 4}

7)Write a Python program to create a union of sets. 
solution--
my1=set()
n=int(input("enter length: "))
for i in range(n):
    value=int(input("enter value: "))
    my1.add(value)
    
my2=set()
n1=int(input("enter length: "))
for i in range(n1):
    value2=int(input("enter value: "))
    my2.add(value2)
    
new=my1.union(my2)
print(new)

output--

enter length: 4

enter value: 1

enter value: 2

enter value: 3

enter value: 4

enter length: 3

enter value: 12

enter value: 33

enter value: 21
{1, 2, 3, 4, 33, 21, 12}

8)Write a Python program to create an intersection of sets. 

solution--
my1=set()
n=int(input("enter length: "))
for i in range(n):
    value=int(input("enter value: "))
    my1.add(value)
    
my2=set()
n1=int(input("enter length: "))
for i in range(n1):
    value2=int(input("enter value: "))
    my2.add(value2)
    
new=my1.intersection(my2)
print(new)

9)Write a Python program to create a symmetric difference. 

solution--
my1=set()
n=int(input("enter length: "))
for i in range(n):
    value=int(input("enter value: "))
    my1.add(value)
    
my2=set()
n1=int(input("enter length: "))
for i in range(n1):
    value2=int(input("enter value: "))
    my2.add(value2)
    
new=my1.symmetric_difference(my2)
print(new)

11)Write a Python program to issubset and issuperset. 
solution--

my1=set()
n=int(input("enter length: "))
for i in range(n):
    value=int(input("enter value: "))
    my1.add(value)
    
my2=set()
n1=int(input("enter length: "))
for i in range(n1):
    value2=int(input("enter value: "))
    my2.add(value2)
    
new=my1.issubset(my2)
print(new)

new2=my1.issuperset(my2)
print(new2)

output--
enter length: 4

enter value: 1

enter value: 2

enter value: 3

enter value: 4

enter length: 3

enter value: 1

enter value: 2

enter value: 3
False
True

12)Write a Python program to create a shallow copy of sets. 
Note : Shallow copy is a bit-wise copy of an object. A new object is created that has an exact copy of the values in the original object.

solution--
m1={1,2,3,4}
new=m1.copy()
m1.add(6)
print(new)
print(m1)

13)Write a Python program to clear a set. 

solution--
m1={1,2,3,4}
m1.clear()
print(m1)

output--
set()

14)Write a Python program to use of frozensets. 

solution--
m1={1,2,3,4}
my=frozenset(m1)
try:
    my.add(6)
except AttributeError:
    print("cannot add as it is frozetset")

output--
cannot add as it is frozetset

15)Write a Python program to find maximum and the minimum value in a set. 

solution--
m1={1,2,3,4}
min1=min(m1)
max1=max(m1)
print("max: ",max1,"min: ",min1)

16)Write a Python program to find the length of a set. 

solution--
m1={1,2,3,4}
new=len(m1)
print(new)

output--
4














